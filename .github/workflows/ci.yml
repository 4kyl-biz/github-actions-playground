name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (You can specify the Node.js version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.9.0'

      # Step 3: Cache Yarn dependencies
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn-cache
            my-app/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('my-app/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
     # Step 4: Build and cache Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false  # This is only for local build; set to true if pushing to a registry
          tags: my-app:latest
          cache-from: type=gha  # Use GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max  # Cache Docker layers

   # Step 5: Test the application in Docker container (optional, example)
      - name: Run Docker container
        run: docker run -d -p 3000:3000 my-app:latest